name: docker
on:
  push:
    branches: ["main"]

jobs:
  compile:
    name: Compile container with Docker Buildx
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build container
        run: docker buildx build -f Dockerfile . -t UND-ACM/hello:latest
      - name: Export container
        run: docker save hello:latest | gzip - > ${{ GITHUB_WORKFLOW_SHA }}.tar.gz
      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          path: '${{ GITHUB_WORKFLOW_SHA }}.tar.gz'
          name: 'container_tarball_${{ GITHUB_WORKFLOW_SHA }}'
  test:
    name: Test container functionality
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - uses: actions/download-artifact@v4
        name: Download workflow artifact
        with:
          path: '${{ GITHUB_WORKFLOW_SHA }}.tar.gz'
          name: 'container_tarball_${{ GITHUB_WORKFLOW_SHA }}'
      - name: Load image
        run: docker load < ${{ GITHUB_WORKFLOW_SHA }}.tar.gz
      - name: Spin up container
        run: docker run -d --name helloworld hello:latest
      - name: Await healthy or failed status
        run: |
          while(true); do
            STATUS=$(docker inspect --format='{{json .State.Health}}' helloworld | jq ".Status");
            if [[ "$STATUS" =~ "unhealthy" ]]; then
              echo "Container unhealthy, oh no!";
              exit 1;
            elif [[ "$STATUS" =~ "starting" ]]; then
              echo "Container starting, wait a moment...";
              sleep 5;
            elif [[ "$STATUS" =~ "healthy" ]]; then
              echo "Container healthy, yay!";
              exit 0;
            else
              echo "Unknown status, uh oh!";
              exit 1;
            fi
          done