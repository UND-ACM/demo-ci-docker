name: docker
on:
  push:
    branches: ["main"]

jobs:
  tag:
    name: Generate container tag from workflow SHA
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.parse.outputs.tag }}
    steps:
      - name: Parse SHA
        id: parse
        run: echo "TAG=main_$(cut -c 1-7 <<< '${{ github.workflow_sha }}')" >> "$GITHUB_OUTPUT"
  compile:
    name: Compile container with Docker Buildx
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build container
        run: docker buildx build -f Dockerfile . -t ghcr.io/und-acm/demo-ci-docker:latest -t ghcr.io/und-acm/demo-ci-docker:${{ needs.tag.outputs.tag }}
      - name: Export container
        run: docker save ghcr.io/und-acm/demo-ci-docker:latest | gzip - > ${{ needs.tag.outputs.tag }}.tar.gz
      - uses: actions/upload-artifact@v4
        name: Upload artifact
        with:
          path: '${{ needs.tag.outputs.tag }}.tar.gz'
          name: 'container_tarball_${{ needs.tag.outputs.tag }}'
  test:
    name: Test container health
    runs-on: ubuntu-latest
    needs: [compile, tag]
    steps:
      - uses: actions/download-artifact@v4
        name: Download workflow artifact
        with:
          name: 'container_tarball_${{ needs.tag.outputs.tag }}'
      - name: Load image
        run: gunzip -c ${{ needs.tag.outputs.tag }}.tar.gz | docker load
      - name: Spin up container
        run: docker run -d --name helloworld ghcr.io/und-acm/demo-ci-docker:latest
      - name: Await healthy or failed status
        run: |
          while(true); do
            STATUS=$(docker inspect --format='{{json .State.Health.Status}}' helloworld);
            if [[ "$STATUS" =~ "unhealthy" ]]; then
              echo "Container unhealthy, oh no!";
              exit 1;
            elif [[ "$STATUS" =~ "starting" ]]; then
              echo "Container starting, wait a moment...";
              sleep 5;
            elif [[ "$STATUS" =~ "healthy" ]]; then
              echo "Container healthy, yay!";
              exit 0;
            else
              echo "Unknown status, uh oh!";
              exit 1;
            fi
          done
  publish:
    name: Publish container to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs: [test, tag]
    steps:
      - uses: actions/download-artifact@v4
        name: Download workflow artifact
        with:
          name: 'container_tarball_${{ needs.tag.outputs.tag }}'
      - name: Load image
        run: gunzip -c ${{ needs.tag.outputs.tag }}.tar.gz | docker load
      - name: Log In to Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Publish Image
        run: docker push --all-tags ghcr.io/und-acm/demo-ci-docker